
relo.o:     file format elf64-x86-64
relo.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000043  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  0000000000000000  0000000000000000  00000083  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  00000083  2**0
                  ALLOC
  3 .rodata       00000030  0000000000000000  0000000000000000  00000088  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
  4 .debug_info   00000065  0000000000000000  0000000000000000  000000b8  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  5 .debug_abbrev 0000004a  0000000000000000  0000000000000000  0000011d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000030  0000000000000000  0000000000000000  00000167  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  7 .debug_line   00000040  0000000000000000  0000000000000000  00000197  2**0
                  CONTENTS, RELOC, READONLY, DEBUGGING
  8 .debug_str    0000006e  0000000000000000  0000000000000000  000001d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .comment      00000035  0000000000000000  0000000000000000  00000245  2**0
                  CONTENTS, READONLY
 10 .note.GNU-stack 00000000  0000000000000000  0000000000000000  0000027a  2**0
                  CONTENTS, READONLY
 11 .eh_frame     00000038  0000000000000000  0000000000000000  00000280  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 relo.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .data	0000000000000000 .data
0000000000000000 l    d  .bss	0000000000000000 .bss
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l    d  .debug_info	0000000000000000 .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000 .debug_abbrev
0000000000000000 l    d  .debug_aranges	0000000000000000 .debug_aranges
0000000000000000 l    d  .debug_line	0000000000000000 .debug_line
0000000000000000 l    d  .debug_str	0000000000000000 .debug_str
0000000000000000 l    d  .note.GNU-stack	0000000000000000 .note.GNU-stack
0000000000000000 l    d  .eh_frame	0000000000000000 .eh_frame
0000000000000000 l    d  .comment	0000000000000000 .comment
0000000000000000 g     F .text	0000000000000043 relo3



Disassembly of section .text:

0000000000000000 <relo3>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d fc             	mov    %edi,-0x4(%rbp)
   7:	8b 45 fc             	mov    -0x4(%rbp),%eax
   a:	83 e8 64             	sub    $0x64,%eax
   d:	83 f8 05             	cmp    $0x5,%eax
  10:	77 29                	ja     3b <relo3+0x3b>
  12:	89 c0                	mov    %eax,%eax
  14:	48 8b 04 c5 00 00 00 	mov    0x0(,%rax,8),%rax
  1b:	00 
			18: R_X86_64_32S	.rodata
  1c:	ff e0                	jmpq   *%rax
  1e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  21:	eb 1e                	jmp    41 <relo3+0x41>
  23:	8b 45 fc             	mov    -0x4(%rbp),%eax
  26:	83 c0 01             	add    $0x1,%eax
  29:	eb 16                	jmp    41 <relo3+0x41>
  2b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  2e:	83 c0 03             	add    $0x3,%eax
  31:	eb 0e                	jmp    41 <relo3+0x41>
  33:	8b 45 fc             	mov    -0x4(%rbp),%eax
  36:	83 c0 05             	add    $0x5,%eax
  39:	eb 06                	jmp    41 <relo3+0x41>
  3b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  3e:	83 c0 06             	add    $0x6,%eax
  41:	5d                   	pop    %rbp
  42:	c3                   	retq   
